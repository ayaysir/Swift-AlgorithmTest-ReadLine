//
//  11501.swift
//  AlgorithmTest-ReadLine
//
//  Created by 윤범태 on 2024/01/19.
//

import Foundation

func Q_11501() {
    let T = Int(readLine()!)!
    
    for _ in 0..<T {
        _ = Int(readLine(strippingNewline: true)!)!
        let prices: [Int] = readLine(strippingNewline: true)!.split(separator: " ").map { Int($0)! }
        
        var maxPrice: Int = .min
        var profit = 0
        
        // through: 0 포함
        for i in stride(from: prices.count - 1, through: 0, by: -1) {
            if prices[i] > maxPrice {
                maxPrice = prices[i]
            } else {
                profit += (maxPrice - prices[i])
            }
        }
        
        print(profit)
    }
}

/*
 주식 https://www.acmicpc.net/problem/11501
 시간 제한 5 초
 메모리 제한 256 MB
 
 홍준이는 요즘 주식에 빠져있다. 그는 미래를 내다보는 눈이 뛰어나, 날 별로 주가를 예상하고 언제나 그게 맞아떨어진다. 매일 그는 아래 세 가지 중 한 행동을 한다.

 주식 하나를 산다.
 원하는 만큼 가지고 있는 주식을 판다.
 아무것도 안한다.
 홍준이는 미래를 예상하는 뛰어난 안목을 가졌지만, 어떻게 해야 자신이 최대 이익을 얻을 수 있는지 모른다. 따라서 당신에게 날 별로 주식의 가격을 알려주었을 때, 최대 이익이 얼마나 되는지 계산을 해달라고 부탁했다.

 예를 들어 날 수가 3일이고 날 별로 주가가 10, 7, 6일 때, 주가가 계속 감소하므로 최대 이익은 0이 된다. 그러나 만약 날 별로 주가가 3, 5, 9일 때는 처음 두 날에 주식을 하나씩 사고, 마지막날 다 팔아 버리면 이익이 10이 된다.

 입력
 입력의 첫 줄에는 테스트케이스 수를 나타내는 자연수 T가 주어진다. 각 테스트케이스 별로 첫 줄에는 날의 수를 나타내는 자연수 N(2 ≤ N ≤ 1,000,000)이 주어지고, 둘째 줄에는 날 별 주가를 나타내는 N개의 자연수들이 공백으로 구분되어 순서대로 주어진다. 날 별 주가는 10,000이하다.

 출력
 각 테스트케이스 별로 최대 이익을 나타내는 정수 하나를 출력한다. 답은 부호있는 64bit 정수형으로 표현 가능하다.

 예제 입력 1
3
3
10 7 6
3
3 5 9
5
1 1 3 1 2
 
 예제 출력 1
 0
 10
 5
 
 https://kangwlgns.tistory.com/18
 - for문을 앞에서부터 돌리면 최대값 찾기 어려움(시간초과)
 - for문을 뒤에서부터 돌리고, 최대값인 경우 저장후 continue
 - 최대값이 아니면 최대값에서 현재가격을 뺀 값이 이익
 - 이익을 누적시키면 O(N)으로 해결됨
 
 .........................................................
 문제는 현재 구입하는 시점 이후에 가장 비싼 때가 언젠지 모른다는 것입니다.

 가장 비싼 때를 찾고 그 이전의 모든 주가에 대한 이익을 계산하면 최악의 경우
 O(N^2) 입니다.

 그렇다면 조금 생각을 바꿔보겠습니다.
 우리는 계속 주가를 앞에서부터 생각했기 때문에 가장 비싼 때를 찾아야만 했습니다.

 하지만 주가를 뒤에서부터 쭉 훑으면서 탐색한다면 어떨까요.
 구입하는 시점 이후에서 가장 비쌀 때를 미리 확인하고 사들이는 것입니다.
 한 번에 지나가면서 이익도 계산할 수 있고 최댓값도 갱신할 수 있습니다.
 .........................................................
 
 */
