//
//  10986.swift
//  AlgorithmTest-ReadLine
//
//  Created by 윤범태 on 3/20/2024.
//
//  4: 나머지 합 https://www.acmicpc.net/problem/10986
//

import Foundation

/// 나머지 합 https://www.acmicpc.net/problem/10986
func Q_10986() {
    let m = readLine()!.split(separator: " ").map { Int($0)! }[1]
    var numbers = [0] + readLine()!.split(separator: " ").map { Int($0)! }
    var mods = Array(repeating: 0, count: m)
    
    var result = 0
    for i in 1..<numbers.count {
        numbers[i] += numbers[i - 1]
        mods[numbers[i] % m] += 1
        
        if numbers[i] % m == 0 {
            result += 1
        }
    }
    
    for i in mods.indices {
        result += ((mods[i] - 1) * mods[i]) / 2
    }
     
    print(result)
}

/*
 [풀이] https://velog.io/@isohyeon/Java-백준-10986-나머지-합
 
 수학식으로 정리 (S: 구간합 배열, S[j] - S[i-1]을 M으로 나눈 나머지가 0인 (i, j)의 값)
 1. (S[j] − S[i−1]) % M = 0
 2. (S[j] % M) − (S[i−1] % M) = 0
 3. S[j] % M = S[i−1] % M (<= -(S[i−1] % M)을 우변으로 넘긴다.)
 
 코드를 생각
 1. 합배열 S를 생성할 때, % M 처리한 결과를 저장한다.
 2. S[i] % M == 0 인 결과를 더한다.
   - S[i] % M 값이 0이라는 뜻은 원본 배열 A의 (1~i)의 구간 합이 이미 M으로 나누어 떨어진다는 뜻이기 때문이다.
 
 +----------+---+---+---+---+---+---+
 |     i    ║ 0 | 1 | 2 | 3 | 4 | 5 |
 +==========+===+===+===+===+===+===+
 |   A[i]   ║   | 1 | 2 | 3 | 1 | 2 |
 +----------+---+---+---+---+---+---+
 |   S[i]   ║   | 1 | 3 | 6 | 7 | 9 |
 +----------+---+---+---+---+---+---+
 | S[i] % M ║   | 1 | 0 | 0 | 1 | 0 |
 +----------+---+---+---+---+---+---+
 
 -- 여기부터 뭔소린지 모르겠음 --
 3. S[j] % M == S[i-1] % M (수학식 3번째) 을 만족하는 (i,j)의 수를 구한다.
   - 나머지 값의 경우의 수를 저장한 배열을 mods라고 하자.
   - 나머지 값이 같은 인덱스 중 2개를 뽑는 모든 경우의 수를 구하면 된다. (<= ??)
    => j = 4, i-1 = 1인 경우 S[j] − S[i−1] = 7 - 1 = 6 (M = 3으로 나뉨)
    => S[4] % M = S[1] % M => S[4] % 3 = S[1] % 3 = 1
   - 나머지 값이 같은 인덱스 중 2개를 뽑는 모든 경우의 수를 구한다. 위의 예에서는 0이 3개, 1이 2개이므로
     (3)C(2) 와 (2)C(2) 의 합을 구하고 결과 값에 더한다.
   - (mods[i])C(2) = (mods[i] * (mods[i]-1)) / 2
 
 
 --------------------
 
 문제
 수 N개 A1, A2, ..., AN이 주어진다. 이때, 연속된 부분 구간의 합이 M으로 나누어 떨어지는 구간의 개수를 구하는 프로그램을 작성하시오.

 즉, Ai + ... + Aj (i ≤ j) 의 합이 M으로 나누어 떨어지는 (i, j) 쌍의 개수를 구해야 한다.

 입력
 첫째 줄에 N과 M이 주어진다. (1 ≤ N ≤ 106, 2 ≤ M ≤ 103)

 둘째 줄에 N개의 수 A1, A2, ..., AN이 주어진다. (0 ≤ Ai ≤ 109)

 출력
 첫째 줄에 연속된 부분 구간의 합이 M으로 나누어 떨어지는 구간의 개수를 출력한다.

 예제 입력 1
 5 3
 1 2 3 1 2
 
 예제 출력 1
 7
 */
